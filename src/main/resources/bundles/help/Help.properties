#X.syntax=
#X.summary=
#X.description=
#X.roles=

_MAIN.content=Grounds is a MUSH.\n\n\
For help on a command, enter 'HELP' followed by the command. For a list of \
all commands, enter 'HELP commands'.

ABANDON.syntax=ABANDON <thing>
ABANDON.summary=Gives up ownership of a thing.
ABANDON.description=You can still hold a thing even if you do not own it.
ABANDON.roles=NONGUEST

ACTOR.syntax=ACTOR <subcommand> [<arguments>]
ACTOR.summary=Works with actors.
ACTOR.description=Available subcommands:\n\n\
    - ACTOR ADD\n\
    - ACTOR ADD_PLAYER\n\
    - ACTOR BOOT\n\
    - ACTOR GET\n\
    - ACTOR LIST\n\
    - ACTOR LOCK\n\
    - ACTOR REMOVE\n\
    - ACTOR REMOVE_PLAYER\n\
    - ACTOR SET_PASSWORD\n\
    - ACTOR UNLOCK
ACTOR.roles=See subcommands

ACTOR_ADD.syntax=ACTOR ADD <username> <password>
ACTOR_ADD.summary=Adds a new actor.
ACTOR_ADD.description=The new actor may immediately log in, although they \
    will not be able to play as any player until one is added for them.
ACTOR_ADD.roles=THAUMATURGE

ACTOR_ADD_PLAYER.syntax=ACTOR ADD_PLAYER <username> <player ID>
ACTOR_ADD_PLAYER.summary=Adds a player to an actor's list of permitted players.
ACTOR_ADD_PLAYER.description=A player ID is required because actor records \
    are not confined to one universe.
ACTOR_ADD_PLAYER.roles=THAUMATURGE

ACTOR_BOOT.syntax=ACTOR BOOT <username> [<player>]
ACTOR_BOOT.summary=Kicks an actor off of the server.
ACTOR_BOOT.description=This terminates either a single actor session if a \
    player is given, or else all of an actor's sessions. The actor may still \
    log back in unless other measures are taken.
ACTOR_ADD.roles=ADEPT, THAUMATURGE

ACTOR_GET.syntax=ACTOR GET <username>
ACTOR_GET.summary=Gets actor information.
ACTOR_GET.description=This includes the actor's permitted players.
ACTOR_GET.roles=ADEPT, THAUMATURGE

ACTOR_LIST.syntax=ACTOR LIST
ACTOR_LIST.summary=Lists all actor usernames.
ACTOR_LIST.description=For details on an actor, use ACTOR GET with a username.
ACTOR_LIST.roles=ADEPT, THAUMATURGE

ACTOR_LOCK.syntax=ACTOR LOCK <username> <until>
ACTOR_LOCK.summary=Locks an actor's account until a given time.
ACTOR_LOCK.description=The time is specified in the standard ISO 8601 format: \
    yyyy-MM-dd'T'HH:mm:ss (example: 2020-12-31T14:25:36).
ACTOR_LOCK.roles=ADEPT, THAUMATURGE

ACTOR_REMOVE.syntax=ACTOR REMOVE <username>
ACTOR_REMOVE.summary=Removes an actor.
ACTOR_REMOVE.description=Be careful!
ACTOR_REMOVE.roles=NONE

ACTOR_REMOVE_PLAYER.syntax=ACTOR REMOVE_PLAYER <username> <player ID>
ACTOR_REMOVE_PLAYER.summary=Removes an player from an actor's list of \
    permitted players.
ACTOR_REMOVE_PLAYER.description=A player ID is required because actor records \
    are not confined to one universe. This command does not terminate the \
    actor's current session as the player, if any.
ACTOR_ADD.roles=THAUMATURGE

ACTOR_SET_PASSWORD.syntax=ACTOR SET_PASSWORD <username> <password>
ACTOR_SET_PASSWORD.summary=Sets an actor's password.
ACTOR_SET_PASSWORD.description=Use this to help an actor regain access, or to \
    indefinitely lock out an actor.
ACTOR_SET_PASSWORD.roles=ADEPT, THAUMATURGE

ACTOR_UNLOCK.syntax=ACTOR UNLOCK <username>
ACTOR_UNLOCK.summary=Unlocks an actor's account.
ACTOR_UNLOCK.description=Use this to cut short an actor's lockout period.
ACTOR_UNLOCK.roles=ADEPT, THAUMATURGE

ANNOUNCE.syntax=ANNOUNCE <message>
ANNOUNCE.summary=Emits a message to all players in any location
ANNOUNCE.description=This functions like a page to all players.
ANNOUNCE.roles=THAUMATURGE

BUILD.syntax=BUILD <type> <name> [<build argument> ...]
BUILD.summary=Builds a new thing, locating it where the player is now
BUILD.description=Supported types:\n\
- BUILD thing <name>\n\
- BUILD player <name> <initial role>\n\
- BUILD place <name>\n\
- BUILD link <name> <source place> <source exit name>\n\
-   <destination place> <destination exit name>\n\
- BUILD extension <name>
BUILD.roles=BARD,THAUMATURGE

CHANGE_PASSWORD.syntax=CHANGE_PASSWORD <old password> <new password>
CHANGE_PASSWORD.summary=Changes your password
CHANGE_PASSWORD.description=You must supply your old password to change it \
    to a new one. If you have forgotten your password, ask a wizard to reset \
    it.
CHANGE_PASSWORD.roles=NONGUEST

CHANGE_POLICY.syntax=CHANGE_POLICY <thing> <instruction>
CHANGE_POLICY.summary=Changes the policy on a thing
CHANGE_POLICY.description=An instruction is a comma-separated list of \
    modifications. A modification has the following form:\n\n\
    <category><+|-><roles>\n\n\
    - <category> is a character:\n\
    g = GENERAL   r = READ      w = WRITE     u = USE\n\
    - + indicates to add roles, - indicated to remove roles\n\
    - <roles> is one or more characters (in any order):\n\
    g = GUEST     d = DENIZEN   o = OWNER\n\
    B = BARD      A = ADEPT     T = THAUMATURGE\n\n\
    Examples:\n\
    - g+g = add GUEST to GENERAL\n\
    - w-BA,r+g = remove BARD and ADEPT from WRITE, add GUEST to READ
CHANGE_POLICY.roles=BARD, THAUMATURE

CLAIM.syntax=CLAIM <thing>
CLAIM.summary=Takes ownership of a thing.
CLAIM.description=You cannot claim something that is owned by someone else.
CLAIM.roles=NONGUEST

COMBAT.syntax=COMBAT <subcommand> [<arguments>]
COMBAT.summary=Engage in combat
COMBAT.description=Available subcommands:\n\n\
    - COMBAT ADD\n\
    - COMBAT ADD_NPC\n\
    - COMBAT END\n\
    - COMBAT INIT\n\
    - COMBAT MOVE\n\
    - COMBAT MOVE_NPC\n\
    - COMBAT REMOVE\n\
    - COMBAT REMOVE_NPC\n\
    - COMBAT RESTORE\n\
    - COMBAT SAVE\n\
    - COMBAT START\n\
    - COMBAT STATUS
COMBAT.roles=See subcommands

COMBAT_ADD.syntax=COMBAT ADD <player> <team>
COMBAT_ADD.summary=Adds a player to a combat team
COMBAT_ADD.description=Players cannot be added after combat has started. If \
    the team does not yet exist, it is created.
COMBAT_ADD.roles=NONGUEST

COMBAT_ADD_NPC.syntax=COMBAT ADD_NPC <npc> <statsSpec> <team>
COMBAT_ADD_NPC.summary=Adds a new NPC to a combat team
COMBAT_ADD_NPC.description=Only the combat owner can add NPCs. NPCs cannot be \
    added after combat has started. If the team does not yet exist, it is \
    created. The statsSpec format is:\n\n\
    <skill4>:<skill3>:<skill2>:<max AP size>:<defense>:<max wounds>:<ad>:<sd>\n\n\
    At least one skill is required; the rest may be blank.
COMBAT_ADD_NPC.roles=NONGUEST

COMBAT_END.syntax=COMBAT END
COMBAT_END.summary=Ends and removes combat in the current location
COMBAT_END.description=Only the combat owner and wizards can end combat.
COMBAT_END.roles=NONGUEST

COMBAT_MOVE.syntax=COMBAT MOVE <move command>
COMBAT_MOVE.summary=Moves within combat in the current location
COMBAT_MOVE.description=Players cannot move until combat has started, and may \
    not move further once combat is over.
COMBAT_MOVE.roles=NONGUEST

COMBAT_MOVE_NPC.syntax=COMBAT MOVE_NPC <npc> <move command>
COMBAT_MOVE_NPC.summary=Moves an NPC within combat in the current location
COMBAT_MOVE_NPC.description=Only the combat owner can add NPCs. NPCs cannot \
    be moved until combat has started, and may not be moved further once \
    combat is over.
COMBAT_MOVE_NPC.roles=NONGUEST

COMBAT_INIT.syntax=COMBAT INIT <name>
COMBAT_INIT.summary=Initializes a new combat in the current location
COMBAT_INIT.description=The player running this command becomes the combat \
    owner. Only one combat may be present in a single location. After a combat \
    is initialized, add players to it, and then START combat.
COMBAT_INIT.roles=NONGUEST

COMBAT_REMOVE.syntax=COMBAT REMOVE <player> <team>
COMBAT_REMOVE.summary=Removes a player from a combat team
COMBAT_REMOVE.description=Players cannot be removed after combat has started.
COMBAT_REMOVE.roles=NONGUEST

COMBAT_REMOVE_NPC.syntax=COMBAT REMOVE_NPC <npc> <team>
COMBAT_REMOVE_NPC.summary=Removes an NPC from a combat team
COMBAT_REMOVE_NPC.description=Only the combat owner can remove NPCs. NPCs \
    cannot be removed after combat has started.
COMBAT_REMOVE_NPC.roles=NONGUEST

COMBAT_RESTORE.syntax=COMBAT RESTORE
COMBAT_RESTORE.summary=Restores combat state
COMBAT_RESTORE.description=Only the combat owner and wizards can restore \
    combat state. State must have been SAVEd already. This effectively \
    restarts combat where it left off.
COMBAT_RESTORE.roles=NONGUEST

COMBAT_SAVE.syntax=COMBAT SAVE
COMBAT_SAVE.summary=Saves combat state
COMBAT_SAVE.description=Only the combat owner and wizards can save combat \
    state. Only one state may be saved.
COMBAT_SAVE.roles=NONGUEST

COMBAT_START.syntax=COMBAT START [<team> ...]
COMBAT_START.summary=Starts combat in the current location
COMBAT_START.description=Only the combat owner and wizards can start combat. \
    Once combat has started, team membership cannot be changed. Teams may be \
    listed in moving priority order; any not listed move in random order \
    any that are listed.
COMBAT_START.roles=NONGUEST

COMBAT_STATUS.syntax=COMBAT STATUS
COMBAT_STATUS.summary=Reports combat status
COMBAT_STATUS.description=Before combat has started, this command reports \
    team composition. After combat has started, it also reports the current \
    round, indicates the moving team and who has not yet moved, and combat \
    statistics.
COMBAT_STATUS.roles=NONGUEST

DESCRIBE.syntax=DESCRIBE <thing> [<description>]
DESCRIBE.summary=Gets or sets the description of a thing.
DESCRIBE.description=With no description argument, the thing's description \
    is provided. With a description, it is set. Pass "-" as a description \
    to remove it.
DESCRIBE.roles=NONGUEST

DESTROY.syntax=DESTROY <thing>
DESTROY.summary=Destroys a thing
DESTROY.description=Some types of things cannot be destroyed when they are in \
    a certain state.\n\
    - A place cannot be destroyed if there are links to it, or if there is \
    anything or anyone in it.\n\
    - A player cannot be destroyed while someone is using it.\n\
    The contents of a destroyed thing are moved to the universe's lost and \
    found place.
DESTROY.roles=BARD,THAUMATURGE

EXIT.syntax=EXIT
EXIT.summary=Exits the shell
EXIT.description=If you want to switch to a different player instead of leave \
the game, use SWITCH_PLAYER instead.
EXIT.roles=ALL

GET_ATTR.syntax=GET_ATTR <thing> <attrName>
GET_ATTR.summary=Gets an attribute (attrSpec) on a thing
GET_ATTR.description=The basic attrSpec format is name[type]=value\n\
    Supported types: STRING, INTEGER, BOOLEAN, THING, ATTR, ATTRLIST\n\
    - THING: the value is the thing's ID\n\
    - ATTR: the value is a JSON object with name, type, and value fields\n\
    - ATTRLIST: the value is a JSON array of JSON objects
GET_ATTR.roles=NONGUEST

GET_ATTR_NAMES.syntax=GET_ATTR_NAMES <thing>
GET_ATTR_NAMES.summary=Gets the names of all attributes on a thing
GET_ATTR_NAMES.description=The names are returned as a comma-separated list.
GET_ATTR.roles=NONGUEST

GET_ID.syntax=GET_ID <name> <type>
GET_ID.summary=Gets the ID of a thing in the universe
GET_ID.description=Supported types: thing, player, place, link, extension
GET_ID.roles=NONGUEST

HELP.syntax=HELP [<command> | commands]
HELP.summary=Gets help for a command
HELP.description=`HELP commands` lists all available commands.
HELP.roles=ALL

HOME.syntax=HOME [<place>]
HOME.summary=Sets a new home, or teleports home
HOME.description=With no argument, teleports you to your home.\n\
    With an argument, sets that place as your new home.
HOME.roles=NONGUEST

INDEX.syntax=INDEX
INDEX.summary=Lists everything in the universe
INDEX.description=The name, type, and ID of all things in the universe are listed.
INDEX.roles=WIZARD

INIT.syntax=INIT <name>
INIT.summary=Creates a new universe and sets it as the current one
INIT.description=This wipes the state of the game.
INIT.roles=NONE

INSPECT.syntax=INSPECT <thing> [<attrName>]
INSPECT.summary=Lists everything about a thing, or one of its attributes
INSPECT.description=The listing for a thing includes its attributes, contents, \
  and policy. The listing for an attribute is just the single attribute. The \
  output for either listing is in JSON format.
INSPECT.roles=WIZARD

INVENTORY.syntax=INVENTORY
INVENTORY.summary=Lists your inventory
INVENTORY.description=The name and ID of all things you are holding are listed.
INVENTORY.roles=NONGUEST

LOAD.syntax=LOAD <file>
LOAD.summary=Loads a universe from a file
LOAD.description=This replaces the state of the game with the file's contents.
LOAD.roles=NONE

LOOK.syntax=LOOK
LOOK.summary=Describes where you are located
LOOK.description=The description including other players and things present \
    and any available exits.
LOOK.roles=ALL

MAIL.syntax=MAIL <subcommand> [<arguments>]
MAIL.summary=Works with mail.
MAIL.description=Available subcommands:\n\n\
    - MAIL DELETE\n\
    - MAIL GET\n\
    - MAIL LIST\n\
    - MAIL MARK_READ\n\
    - MAIL SEND
MAIL.roles=See subcommands

MAIL_DELETE.syntax=MAIL DELETE <index>
MAIL_DELETE.summary=Deletes one mail message.
MAIL_DELETE.description=To see message index numbers, use MAIL LIST. After \
    a message is deleted, index numbering may shift.
MAIL_DELETE.roles=NONGUEST

MAIL_GET.syntax=MAIL GET <index>
MAIL_GET.summary=Gets one mail message.
MAIL_GET.description=To see message index numbers, use MAIL LIST.
MAIL_GET.roles=NONGUEST

MAIL_LIST.syntax=MAIL LIST
MAIL_LIST.summary=Lists mail.
MAIL_LIST.description=Mail is listed in reverse chronological order.
MAIL_LIST.roles=NONGUEST

MAIL_SEND.syntax=MAIL SEND <recipient-name-1> [...] <subject> <body>
MAIL_SEND.summary=Sends mail to one or more recipients.
MAIL_SEND.description=There must be at least one recipient, a non-empty \
    subject, and a body which may be empty. Mail is not delivered to \
    recipients who have you muted.
MAIL_SEND.roles=NONGUEST

MOVE.syntax=MOVE <exit-name>
MOVE.summary=Moves you through a named exit
MOVE.description=Use LOOK to find available exits and their names.
MOVE.roles=ALL

MUTE.syntax=MUTE [<player>]
MUTE.summary=Mutes a player; with no argument, prints your mute list
MUTE.description=When a player is muted, you do not receive any messages from \
    them. You cannot mute GOD.
MUTE.roles=NONGUEST

PAGE.syntax=PAGE <player> <message>
PAGE.summary=Emits a message only to another player, in any location
PAGE.description=The string "<your-player-name> says OOC from afar: " is \
    prepended to the message.
PAGE.roles=NONGUEST

POSE.syntax=POSE <message>
POSE.summary=Emits a message to all players in the same location
POSE.description=No additional text is added to the message normally. However:\n\
    - The command alias ":" creates a pose that starts with your player's name \
    and a space character. Example: ":looks around."
POSE.roles=ALL

PREFERENCE.syntax=PREFERENCE [<prefString>]
PREFERENCE.summary=Gets or sets actor preferences
PREFERENCE.description=With no prefString, lists all actor preferences.\n\
    With a prefString, sets or removes a preference.\n\
    - name=value sets the preference named "name" to "value"\n\
    - name= removes the preference named "name"
PREFERENCE.roles=NONGUEST

REMOVE_ATTR.syntax=REMOVE_ATTR <thing> <attrName>
REMOVE_ATTR.summary=Removes an attribute from a thing
REMOVE_ATTR.description=It is not an error to remove a missing attribute.
REMOVE_ATTR.roles=NONGUEST

ROLE.syntax=ROLE <subcommand> [<arguments>]
ROLE.summary=Works with player roles.
ROLE.description=Available subcommands:\n\n\
    - ROLE ADD\n\
    - ROLE GET\n\
    - ROLE REMOVE
ROLE.roles=See subcommands

ROLE_ADD.syntax=ROLE ADD <role> <player>
ROLE_ADD.summary=Adds a role to a player.
ROLE_ADD.description=The role change takes effect immediately.
ROLE_ADD.roles=THAUMATURGE

ROLE_GET.syntax=ROLE GET <player>
ROLE_GET.summary=Lists the roles for a player.
ROLE_GET.description=The same information is returned when adding or removing \
    a role.
ROLE_GET.roles=WIZARD

ROLE_REMOVE.syntax=ROLE REMOVE <role> <player>
ROLE_REMOVE.summary=Removes a role from a player.
ROLE_REMOVE.description=The role change takes effect immediately.
ROLE_REMOVE.roles=THAUMATURGE

RUN.syntax=RUN <file>
RUN.summary=Runs commands from a file
RUN.description=Each command is executed as if typed into a shell. \
    Blank lines and lines starting with "#" or "//" are ignored. \
    If any command fails, execution stops and remaining commands are not run.
RUN.roles=NONE

SAVE.syntax=SAVE [<file>]
SAVE.summary=Saves the universe to a file
SAVE.description=This saves the state of the game to a file. If the file is \
    not specified, then the current file of the universe is used.
SAVE.roles=NONE

SAY.syntax=SAY [_ooc_] <message>
SAY.summary=Emits a message to all players in the same location
SAY.description=The string "<your-player-name> says: " is prepended to \
    the message for normal calls. When "_ooc_" is included, then the string \
    "<your-player-name> says OOC: " is prepended instead.\n\
    - The command alias ">" works like SAY. Example: ">Hello everyone!"\n\
    - The command alias "OOC" replaces "SAY _ooc_". Example: "OOC I am \
    online"\n\
    - The command alias "%" works like OOC. Example: "%I am online"
SAY.roles=ALL

SET_ATTR.syntax=SET_ATTR <thing> <attrSpec>
SET_ATTR.summary=Sets an attribute on a thing
SET_ATTR.description=The attrSpec format is name[type]=value\n\
    Supported types: STRING, INTEGER, BOOLEAN, THING, ATTR, ATTRLIST\n\
    - THING: use the thing's name or ID as the value\n\
    - ATTR: use JSON object with name, type, and value fields\n\
    - ATTRLIST: use JSON array of JSON objects\n\
    value is either literal or @path-to-file-containing-value
SET_ATTR.roles=NONGUEST

SHUTDOWN.syntax=SHUTDOWN
SHUTDOWN.summary=Exits the shell and also shuts down the server
SHUTDOWN.description=This terminates all player connections as well.
SHUTDOWN.roles=NONE

SWITCH_PLAYER.syntax=SWITCH_PLAYER <player>
SWITCH_PLAYER.summary=Switches to a different player
SWITCH_PLAYER.description=You may only switch to a player you are permitted to \
play as, and only if no one else is currently playing as that player.
SWITCH_PLAYER.roles=NONGUEST

TELEPORT.syntax=TELEPORT <place-id>
TELEPORT.summary=Teleports you to a new place
TELEPORT.description=This jumps you directly to the destination.
TELEPORT.roles=NONGUEST

UNMUTE.syntax=UNMUTE <player>
UNMUTE.summary=Unmutes a player
UNMUTE.description=When a player is no longer muted, you can receive messages \
    from them.
UNMUTE.roles=NONGUEST

WHISPER.syntax=WHISPER <player> <message>
WHISPER.summary=Sends a message only to another player
WHISPER.description=The string "<your-player-name> whispers: " is prepended to \
    the message. The recipient must be in your location for the message to be \
    delivered.
WHISPER.roles=NONGUEST

WHO.syntax=WHO
WHO.summary=Lists all connected players in the universe
WHO.description=Besides just player names and connection times, wizards also \
    see associated actors and locations.
WHO.roles=NONGUEST

YOINK.syntax=YOINK <thing> <place>
YOINK.summary=Relocates a thing to a new place.
YOINK.description=This command works like TELEPORT, but is performed on \
    any thing. The relocated thing, when a player, does not need to have \
    permission to enter the destination.
YOINK.roles=THAUMATURGE
